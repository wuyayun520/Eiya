name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/eiya.ipa"
          APPLE_ID: "liudongyue@ntbeifan.shop "
          APP_SPECIFIC_PASSWORD: "nolp-cuzc-rdro-wrta"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
